// <auto-generated />
using System;
using Agendamentos.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agendamentos.Migrations
{
    [DbContext(typeof(AgendamentosDbContext))]
    [Migration("20250605144433_001_InitialCreate")]
    partial class _001_InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agendamentos.Domain.Models.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AmbienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("HorarioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.Ambiente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Ambientes");
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.Horario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("interval");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("Turno")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Horarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 8, 0, 0, 0),
                            Rank = 1,
                            Turno = 0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 9, 0, 0, 0),
                            Rank = 2,
                            Turno = 0
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 10, 0, 0, 0),
                            Rank = 3,
                            Turno = 0
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 4,
                            Turno = 0
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 5,
                            Turno = 1
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 6,
                            Turno = 1
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 7,
                            Turno = 1
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 8,
                            Turno = 1
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 9,
                            Turno = 1
                        },
                        new
                        {
                            Id = new Guid("10101010-1010-1010-1010-101010101010"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 10,
                            Turno = 2
                        },
                        new
                        {
                            Id = new Guid("11011011-1101-1101-1101-110110110110"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 11,
                            Turno = 2
                        },
                        new
                        {
                            Id = new Guid("12121212-1212-1212-1212-121212121212"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 12,
                            Turno = 2
                        },
                        new
                        {
                            Id = new Guid("13131313-1313-1313-1313-131313131313"),
                            Deleted = false,
                            Inicio = new TimeSpan(0, 11, 0, 0, 0),
                            Rank = 13,
                            Turno = 2
                        });
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PassWordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.Agendamento", b =>
                {
                    b.HasOne("Agendamentos.Domain.Models.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agendamentos.Domain.Models.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agendamentos.Domain.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("Horario");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Agendamentos.Domain.Models.User", b =>
                {
                    b.HasOne("Agendamentos.Domain.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Professor");
                });
#pragma warning restore 612, 618
        }
    }
}
